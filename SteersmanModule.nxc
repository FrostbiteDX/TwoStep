#ifndef __STEERSMAN_MODULE__
#define __STEERSMAN_MODULE__

/*******************************
 * Steersman Module
 *
 * author: Nils Weiss
 * *****************************/

/*******************************
 * Information:
 *******************************/


/*******************************
 * Includes
 *******************************/

#include "PathfinderModule.nxc"
#include "CalibModule.nxc"
#include "MotorUnit.nxc"

/******************************
 * Defines:
 ******************************/

/*******************************
 * Declaration
 *******************************/

 //uses unsigned byte PathFinder_timeTableWritePointer;
 //uses PathFinder_timeTableEntry PathFinder_timeTable[];
 byte Steersman_timeTableReadPointer;
 
 task Steersman_controlTask(void);
 void Steersman_exception(void);
 void Steersman_init(void);

/******************************
 * Debugs
 * using LCD
 ******************************/

 #define Steersman_DEBUG
 #define Steersman_FEEDBACK
 #define Steersman_SEKTORLENGTH_IN_CM 25
 #define Steersman_TARGET '1'

/*******************************
 *Functions and tasks
 *******************************/

void Steersman_exception(void)
{
     TextOut(0, LCD_LINE1, "Steersman exception!");
     PlayTone(TONE_C5, SEC_1);
     Wait(5000);
     Stop(true);
}


void Steersman_init(void)
{
     PathFinder_init();
     
     StartTask(Steersman_controlTask);

}

#define currentEntry PathFinder_timeTable[Steersman_timeTableReadPointer]

task Steersman_controlTask(void)
{
     //Fahrplan von S nach -> Steersman_Target erstellen
     PathFinder_annotateMap(Steersman_TARGET);
     PathFinder_searchWay('S');
     Steersman_timeTableReadPointer = 0;
     PathFinder_timeTableEntry PathFinder_lastEntry;
     while(true)
     {
         //Wait(1000);
         ClearLine(LCD_LINE1);
         string message = StrCat(
                        FormatNum( "E%x", currentEntry.xPosition),
                        FormatNum( ":%x:", currentEntry.yPosition),
                        FormatNum( "%d=", currentEntry.orientation),
                        FormatNum( "%c-", currentEntry.activity),
                        FormatNum( "%d", currentEntry.parameter));
         TextOut(0,LCD_LINE1, message);
         Wait(2000);
         
         switch(currentEntry.activity)
         {
              case 'D':
              {
                  long cmToDrive = currentEntry.parameter * Steersman_SEKTORLENGTH_IN_CM;
                  MU_drive(cmToDrive);
                  MU_drive(10);
              } break;
              case 'T':
              {
                  MU_drehen_by_angle(currentEntry.parameter);
              } break;
              default: Steersman_exception();
         }
         ClearLine(LCD_LINE2);
          Wait(2000);
         TextOut(0, LCD_LINE2, "PosCal");
         CU_PosCalibration(currentEntry.xPosition, currentEntry.yPosition, currentEntry.orientation);
         //ZIELERKENNUNG
         TextOut(0, LCD_LINE2, "WayFind");


         Steersman_timeTableReadPointer++;
         if(Steersman_timeTableReadPointer >= PathFinder_timeTableWritePointer)
         {
             PathFinder_lastEntry = PathFinder_timeTable[Steersman_timeTableReadPointer - 1];
             break;
         }

     }
     
     //ZIELFINDUNG
     
#ifdef Steersman_FEEDBACK
	     PlayTone(100,50);
#endif /* Steersman_FEEDBACK */

    //GO HOME
    //Fahrplan von Steersman_Target nach Startpositon erstellen
    PathFinder_annotateMap('S');
    PathFinder_searchWay2(PathFinder_lastEntry.xPosition, PathFinder_lastEntry.yPosition);
    Steersman_timeTableReadPointer = 0;
    
     while(true)
     {
         //CU_PosCalibration(currentEntry.xPosition, currentEntry.yPosition, currentEntry.orientation);
         Wait(1000);
         switch(currentEntry.activity)
         {
              case 'D':
              {
                  long cmToDrive = currentEntry.parameter * Steersman_SEKTORLENGTH_IN_CM;
                  MU_drive(cmToDrive);
              } break;
              case 'T':
              {
                  MU_drehen_by_angle(currentEntry.parameter);
              } break;
              default: Steersman_exception();
         }
              
         Steersman_timeTableReadPointer++;
         if(Steersman_timeTableReadPointer >= PathFinder_timeTableWritePointer)
         {
             break;
         }
     }

    TextOut(0, LCD_LINE3, "Finish Steersman_controlTask");
    PlayTone(TONE_C5, SEC_1);
    Wait(5000);
    Stop(true);
}

#endif
